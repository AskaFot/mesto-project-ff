// –≤ —Ñ–∞–π–ª–µ card.js –æ–ø–∏—Å–∞–Ω—ã —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏: 
// —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏, —Ñ—É–Ω–∫—Ü–∏–∏-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ 
// —Å–æ–±—ã—Ç–∏–π —É–¥–∞–ª–µ–Ω–∏—è –∏ –ª–∞–π–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏;

import { deleteCardFromServer} from './API.js';
import {elementCard} from "./variables.js";



// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
export function createCard(detailsCard, currentUser, likeCard, openFoto) {
  const templateContainer = document.querySelector("#card-template").content;
  const containerElement = templateContainer.querySelector(".card").cloneNode(true);

  containerElement.setAttribute("data-created-by", detailsCard.owner ? detailsCard.owner._id : ""); 
  containerElement.id = detailsCard._id;

  const titleElement = containerElement.querySelector(".card__title");
  const imageElement = containerElement.querySelector(".card__image");
  const buttonDelete = containerElement.querySelector(".card__delete-button");
  const buttonLike = containerElement.querySelector(".card__like-button");
  const likeCount = containerElement.querySelector(".card__like-count");

  imageElement.src = detailsCard.link;
  imageElement.alt = detailsCard.name;
  titleElement.textContent = detailsCard.name;
  likeCount.textContent = detailsCard.likes.length;

  console.log(`–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏: ${detailsCard.name}, –í–ª–∞–¥–µ–ª–µ—Ü: ${detailsCard.owner ? detailsCard.owner._id : "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}`);

  if (detailsCard.owner && detailsCard.owner._id === currentUser) {
    buttonDelete.style.display = "block";
  } else {
    buttonDelete.style.display = "none";
  }

  buttonLike.addEventListener("click", () => likeCard(buttonLike, likeCount));
  buttonDelete.addEventListener("click", () => removeCard(containerElement));
  imageElement.addEventListener("click", openFoto);

  return containerElement;
}

// –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
export function removeCard(elementCard) {
  if (elementCard instanceof HTMLElement) {
    console.log(`üóë –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ ID: ${elementCard.id}`);
    elementCard.remove();
  } else {
    console.error("‚ùå removeCard –ø–æ–ª—É—á–∏–ª –Ω–µ DOM-—ç–ª–µ–º–µ–Ω—Ç!", elementCard);
  }
}



// –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
function openDeletePopup(cardElement) {
  const deletePopup = document.getElementById("delete-popup");
  deletePopup.style.display = "block";
  deletePopup.setAttribute("data-card-id", cardElement.id);
}

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
export function handleDeleteCard() {
  const deletePopup = document.getElementById("delete-popup");
  const cardId = deletePopup.getAttribute("data-card-id");
  if (!cardId) return;

  deleteCardFromServer(cardId)
    .then(() => {
      const cardElement = document.getElementById(cardId);
      if (cardElement) {
        cardElement.remove();
      }
      deletePopup.style.display = "none";
    })
    .catch(err => console.error(err));
}




//–ø–æ—Ç–æ–º –≤ API

document.addEventListener("DOMContentLoaded", () => {
  const currentUser = "1c551ff6-00cc-40b7-b844-b0d2f447e9fe"; // ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const cards = document.querySelectorAll('.card');
  const deletePopup = document.getElementById('delete-popup');
  const confirmDeleteButton = document.querySelector('.confirm-delete');
  const cancelDeleteButton = document.querySelector('.cancel-delete');

  if (!deletePopup || !confirmDeleteButton || !cancelDeleteButton) {
    console.error("–û—à–∏–±–∫–∞: –ü–æ–ø–∞–ø —É–¥–∞–ª–µ–Ω–∏—è –∏–ª–∏ –µ–≥–æ –∫–Ω–æ–ø–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ DOM!");
    return;
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
  confirmDeleteButton.addEventListener('click', () => {
    const cardId = deletePopup.getAttribute('data-card-id');
    if (!cardId) return;

    fetch(`https://nomoreparties.co/v1/wff-cohort-34/cards/${cardId}`, {
      method: "DELETE",
      headers: {
        Authorization: "Bearer token",
        "Content-Type": "application/json",
      },
    })
      .then(res => {
        if (!res.ok) {
          return Promise.reject(`–û—à–∏–±–∫–∞: ${res.status}`);
        }
        return res.json();
      })
      .then(() => {
        const cardElement = document.getElementById(cardId);
        if (cardElement) {
          cardElement.remove(); // –£–¥–∞–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –∏–∑ DOM
        }
        deletePopup.style.display = 'none';
      })
      .catch(err => console.error(err));
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã —É–¥–∞–ª–µ–Ω–∏—è
  cancelDeleteButton.addEventListener('click', () => {
    deletePopup.style.display = 'none';
  });

  // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ —É–¥–∞–ª–µ–Ω–∏—è
  removeCard(cards, currentUser);
});

// –§—É–Ω–∫—Ü–∏—è –ª–∞–π–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
export function likeCard(elementLike, likeCount) {
  // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∫–ª–∞—Å—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ª–∞–π–∫–∞ (–¥–æ–±–∞–≤–ª—è–µ–º –∏–ª–∏ —É–±–∏—Ä–∞–µ–º "–∑–∞–∫—Ä–∞—à–µ–Ω–Ω—ã–π" —Å—Ç–∏–ª—å)
  elementLike.classList.toggle("card__like-button_is-active");

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤ –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–∞, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–æ
  let currentLikes = parseInt(likeCount.textContent, 10); // '10' –æ–∑–Ω–∞—á–∞–µ—Ç –¥–µ—Å—è—Ç–∏—á–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Å—á–∏—Å–ª–µ–Ω–∏—è

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –∫–ª–∞—Å—Å "–ª–∞–π–∫–Ω—É—Ç–æ–π" –∫–Ω–æ–ø–∫–∏
  if (elementLike.classList.contains("card__like-button_is-active")) {
    // –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ (–ª–∞–π–∫ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω), —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤ –Ω–∞ 1
    likeCount.textContent = currentLikes + 1;
  } else {
    // –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ (–ª–∞–π–∫ —É–±—Ä–∞–Ω), —É–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤ –Ω–∞ 1
    likeCount.textContent = currentLikes - 1;
  }
}