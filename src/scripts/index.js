import "../pages/index.css";
import { openPopup, closePopup } from "./modal.js";
import {
  fetchUserProfile,
  fetchCards,
  updateUserProfile,
  addNewCard,
  updateAvatar,
  deleteCard
} from "./api.js";
import { enableValidation, clearValidation } from "./validation.js";
import { createCard,openDeletePopup } from "./card.js";
import {
  nameInput,
  avatarInput,
  avatarForm,
  jobInput,
  buttonEdit,
  placeInput,
  formCard,
  avatarPopup,
  buttonAdd,
  validationConfig,
  profilePopup,
  cardPopup,
  imagePopup,
  popupImage,
  namePtofil,
  aboutPtofil,
  popupCaption,
  avatarImage,
  linkInput,
  cardContainer,
} from "./variables.js";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–π–¥–µ–Ω—ã –ª–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
if (!namePtofil || !aboutPtofil || !avatarImage || !cardContainer) {
  console.error(
    "–û—à–∏–±–∫–∞: –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–æ—Ñ–∏–ª—è/–∫–∞—Ä—Ç–æ—á–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ DOM!"
  );
}

//  –í–∫–ª—é—á–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
enableValidation(validationConfig);

export function setLoading(btn, isLoading) {
  if (isLoading) {
    btn.textContent = "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å...";
  } else {
    btn.textContent = "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å";
  }
}

/// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
cardPopup.addEventListener("submit", (evt) => {
  evt.preventDefault();

  setLoading(evt.submitter, true);
  console.log(" –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!"); // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ª–∏ `submit` –¥–≤–∞–∂–¥—ã
  const name = placeInput.value;
  const link = linkInput.value;  
  // console.log(btn.innerText)

  addNewCard(name, link)
    .then((cardData) => {
      if (cardData) {
        console.log(" –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É:", cardData);

        const newCard = createCard(cardData, cardData.owner._id,openDeletePopup);
        if (newCard) {
          cardContainer.prepend(newCard);
        }
        closePopup(cardPopup);
      }
    })
    
    .catch(console.error)
    .finally(() => {
      setLoading(evt.submitter, false);
    });
  });
  

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–æ—Ç–æ
export function openFoto(evt) {
  const clickedImage = evt.target; // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫—É–¥–∞ –∫–ª–∏–∫–Ω—É–ª–∏

  if (clickedImage.classList.contains("card__image")) {
    // –ù–∞—Ö–æ–¥–∏–º –∫–∞—Ä—Ç–æ—á–∫—É, –∫ –∫–æ—Ç–æ—Ä–æ–π –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const card = clickedImage.closest(".card"); // –ò—â–µ–º —Ä–æ–¥–∏—Ç–µ–ª—è `.card`
    const cardTitle = card ? card.querySelector(".card__title") : null; // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ä—Ç–æ—á–∫–∏

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ –ø–æ–¥–ø–∏—Å—å
    popupImage.src = clickedImage.src;
    popupImage.alt = cardTitle.textContent; // "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è";
    popupCaption.textContent = cardTitle.textContent; //"–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è";
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ø–∞–ø
    openPopup(imagePopup);
  }
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ–ø–∞–ø–æ–≤
buttonEdit.addEventListener("click", () => {
  nameInput.value = namePtofil.textContent;
  jobInput.value = aboutPtofil.textContent;
  openPopup(profilePopup);
});

buttonAdd.addEventListener("click", () => {
  clearValidation(formCard,validationConfig); // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã –ø–µ—Ä–µ–¥ –æ—Ç–∫—Ä—ã—Ç–∏–µ–º –ø–æ–ø–∞–ø–∞
  openPopup(cardPopup); // –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ–ø–∞–ø–∞
});


avatarImage.addEventListener("click", () => {
  clearValidation(avatarForm,validationConfig); // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã –ø–µ—Ä–µ–¥ –æ—Ç–∫—Ä—ã—Ç–∏–µ–º –ø–æ–ø–∞–ø–∞
  openPopup(avatarPopup); // –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ–ø–∞–ø–∞
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
profilePopup.addEventListener("submit", async (evt) => {
  evt.preventDefault();
  const submitButton = evt.target.querySelector(".popup__button");
  setLoading(evt.submitter, true);

  try {
    const userData = await updateUserProfile(nameInput.value, jobInput.value);
    namePtofil.textContent = userData.name;
    aboutPtofil.textContent = userData.about;
    closePopup(profilePopup);
  } catch (error) {
    console.error(" –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:", error);
  } finally {
    setLoading(evt.submitter, false);
  }
});

  //–∑–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ —Å—Ä–∞–∑—É —Å–æ–∑–¥–∞—ë—Ç –∫–∞—Ä—Ç–æ—á–∫–∏
  Promise.all([fetchUserProfile(), fetchCards()])
  .then(([userData, cards]) => {
    if (!userData || !userData._id) {
      console.error("–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!");
      return;
    }
    cardContainer.addEventListener("click", openFoto);

    const userId = userData._id;
    namePtofil.textContent = userData.name;
    aboutPtofil.textContent = userData.about;
    avatarImage.style.backgroundImage = `url(${userData.avatar})`;
    cards.forEach((card) => {
      const cardEl = createCard(card, userId);
      if (cardEl) cardContainer.append(cardEl);
    });
  })
  .catch((err) => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", err));


  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã –∞–≤–∞–∞—Ä–∞
  avatarForm.addEventListener("submit", (event) => {
    event.preventDefault();
    const avatarUrl = avatarInput.value.trim();
    setLoading(event.submitter, true);
    event.target.reset();
    updateAvatar(avatarUrl)
      .then((data) => {
        if (data && data.avatar) {
          avatarImage.src = data.avatar; // –ú–µ–Ω—è–µ–º –∞–≤–∞—Ç–∞—Ä –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
          avatarImage.style.backgroundImage = `url("${data.avatar}")`;
        }
        closePopup(avatarPopup);
      })
      .catch((err) => {
        console.error(err);
      })
      .finally(() => {
        setLoading(event.submitter, false);
      });
  });


// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
profilePopup.addEventListener("submit", (evt) => {
  evt.preventDefault();
  const name = evt.target.querySelector(nameInput).value;
  const about = evt.target.querySelector(jobInput).value;
  updateUserProfile(name, about);
});

//  –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
let currentCardId = null; // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ ID —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ data-id
let currentCardElement = null;

document.getElementById("confirmDeleteButton").addEventListener("click", () => {
  console.log("üîé –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º:");
  console.log("window.currentCardId:", window.currentCardId);
  console.log("window.currentCardElement:", window.currentCardElement);

  if (!window.currentCardId || !window.currentCardElement) {
    console.error("‚ùå –û—à–∏–±–∫–∞: –Ω–µ—Ç ID –∏–ª–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è!");
    return;
  }

  deleteCard(window.currentCardId)
    .then(() => {
      window.currentCardElement.remove();
      closePopup(document.getElementById("delete-popup"));

      // –°–±—Ä–æ—Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
      window.currentCardId = null;
      window.currentCardElement = null;
    })
    .catch((err) => console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏:", err));
});


//–ï—Å–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫ –º–æ–∂–Ω–æ –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ —Å–∞–±–º–∏—Ç–∞, –æ—Ç–ª–æ–≤ –æ—à–∏–±–æ–∫ –∏ –æ—á–∏—Å—Ç–∫—É —Ñ–æ—Ä–º—ã –≤ –∫–∞–∂–¥–æ–º –∑–∞–ø—Ä–æ—Å–µ  –ü—Ä–∏–º–µ—Ä –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–∞–±–º–∏—Ç–∞ —Ñ–æ—Ä–º—ã –ø—Ä–æ—Ñ–∏–ª—è
// –≤–æ—Ç —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –ø–æ—Å–ª–µ —Å–¥–∞—á–∏ —Ä–∞–±–æ—Ç—ã –ø–æ—Å–º–æ—Ç—Ä—é